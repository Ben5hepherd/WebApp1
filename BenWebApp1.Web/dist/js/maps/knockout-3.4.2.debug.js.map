{"version":3,"sources":["knockout-3.4.2.debug.js"],"names":["DEBUG","undefined","window","this","eval","document","navigator","jQueryInstance","JSON","factory","define","exports","module","koExports","amdRequire","valuesArePrimitiveAndEqual","a","b","oldValueIsPrimitive","primitiveTypes","throttle","callback","timeout","timeoutInstance","ko","utils","setTimeout","debounce","clearTimeout","applyExtenders","requestedExtenders","target","objectForEach","key","value","extenderHandler","extenders","limitNotifySubscribers","event","defaultEvent","_limitBeforeChange","_origNotifySubscribers","_limitChange","computedDisposeDependencyCallback","id","entryToDispose","dispose","computedBeginDependencyDetectionCallback","subscribable","computedObservable","state","computedState","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","_target","subscribeToDependency","_notificationIsPending","_notifyNextChangeIfValueIsDifferent","makeEventHandlerShortcut","eventName","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","newValueAccessor","result","call","makeWithIfBinding","bindingKey","isWith","isNot","makeContextCallback","didDisplayOnLastUpdate","savedNodes","computed","rawValue","dataValue","unwrapObservable","shouldDisplay","isFirstRender","needsRefresh","computedContext","getDependenciesCount","cloneNodes","virtualElements","childNodes","setDomNodeChildren","applyBindingsToDescendants","emptyNode","disposeWhenNodeIsRemoved","controlsDescendantBindings","expressionRewriting","bindingRewriteValidators","allowedBindings","exportSymbol","koPath","object","tokens","split","i","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","obj","action","prop","hasOwnProperty","extend","source","setPrototypeOf","proto","__proto__","isClickOnCheckableElement","eventType","tagNameLower","type","toLowerCase","inputType","toggleDomNodeCssClass","node","classNames","shouldHaveClass","addOrRemoveFn","classList","arrayForEach","match","cssClassNameRegex","className","toggleObjectClassPropertyString","currentClassNames","addOrRemoveItem","join","canSetPrototype","Array","canUseSymbols","Symbol","knownEvents","knownEventTypesByEventName","keyEventTypeName","test","userAgent","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","isIe6","isIe7","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","prototype","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","push","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","apply","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","templateDocument","ownerDocument","container","appendChild","cleanNode","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagName","catchFunctionErrors","delegate","arguments","e","handler","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","isObservable","peek","setTextContent","textContent","innerTextNode","createTextNode","data","forceRefresh","setElementName","name","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getAll","createIfNotFound","dataStoreKey","dataStoreKeyExpandoPropertyName","hasExistingDataStore","dataStore","uniqueId","Date","getTime","get","allDataForNode","set","clear","nextKey","getDisposeCallbacksCollection","allDisposeCallbacks","domDataKey","destroyCallbacksCollection","cleanSingleNode","callbacks","cleanableNodeTypesWithDescendants","cleanImmediateCommentTypeChildren","nodeWithChildren","child","nextChild","cleanableNodeTypes","1","8","9","removeDisposeCallback","callbacksCollection","descendants","cleanExternalData","getWrap","tags","m","lookup","none","simpleHtmlParse","html","documentContext","windowContext","wrap","depth","markup","mayRequireCreateElementHack","lastChild","jQueryHtmlParse","elems","table","tbody","tr","select","thead","tfoot","td","th","option","optgroup","parseHtmlFragment","setHtml","parsedNodes","memoization","randomMax8HexChars","Math","random","generateRandomId","findMemoNodes","rootNode","appendToArray","memoId","parseMemoText","nodeValue","memos","memoize","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","combinedParams","memoText","tasks","processTasks","taskQueueLength","task","mark","countMarks","nextIndexToProcess","taskQueue","ex","scheduledProcess","scheduleTaskProcessing","scheduler","nextHandle","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","writeTimeoutInstance","dependentObservable","read","write","rateLimit","limitFunction","_deferUpdates","limit","deferred","ignoreUpdates","notify","notifyWhen","boolean","number","subscription","disposeCallback","ko_subscribable_fn","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","bind","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","selfIsObservable","beforeChange","finish","_evalIfChanged","shouldNotify","isDifferent","getSubscriptionsCount","total","subscriptions","oldValue","newValue","isSubscribable","getId","lastId","outerFrames","currentFrame","pop","registerDependency","_id","ignore","callbackArgs","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","trackChanges","trackingChanges","underlyingNotifySubscribersFunction","pendingNotifications","previousContents","cachedDiff","arrayChangeSubscription","currentContents","changes","getChanges","compareArrays","compareArrayOptions","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","rawArray","operationName","pushDiff","status","diff","arrayLength","argsLength","offset","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","isDirty","haveDependenciesChanged","evaluateImmediate","latestValue","isStale","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","visitorCallback","propertyName","keys","values","maxNestedObservableDepth","toJS","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","hasDomDataExpandoProperty","selectExtensions","readValue","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","getWriteableValue","expression","javaScriptReservedWords","javaScriptAssignmentTarget","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","bindingToken","tok","c","unknown","divisionLookBehind","keywordRegexLookBehind","substr","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","callPreprocessHook","writableVal","bindingParams","twoWayBindings","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","stringDouble","stringSingle","stringRegexp","specials","everyThingElse","oneNotSpace","in","return","typeof","keyValueArrayContainsKey","writeValueToProperty","property","checkIfDifferent","propWriters","isStartComment","startCommentRegex","commentNodesHaveTextProperty","isEndComment","endCommentRegex","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","createComment","htmlTagsWithOptionallyClosingChildren","ul","ol","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","createBindingsStringEvaluatorViaCache","bindingsString","cache","cacheKey","createBindingsStringEvaluator","rewrittenBindings","functionBody","defaultBindingAttributeName","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","message","makeValueAccessor","evaluateValueAccessor","makeAccessorsFromFunction","makeBindingAccessors","bindings","context","getBindingsAndMakeAccessors","validateThatBindingIsAllowedForVirtualElements","bindingName","validator","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingDoesNotRecurseIntoElementTypes","topologicalSortBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","sourceBindings","bindingsUpdater","alreadyBound","boundElementDomDataKey","storedBindingContextForNode","_subscribable","bindingHandlerThatControlsDescendantBindings","getValueAccessor","orderedBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","initResult","getBindingContext","viewModelOrBindingContext","textarea","template","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_addNode","unshift","properties","createStaticChildContext","exportDependencies","storedBindingContextDomDataKey","applyBindingAccessorsToNode","applyBindingsToNode","applyBindings","contextFor","dataFor","getObjectOwnProperty","propName","loadComponentAndNotify","componentName","completedAsync","loadingSubscribablesCache","beginLoadingComponent","definition","config","isSynchronousComponent","loadedDefinitionsCache","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","cachedDefinition","clearCachedDefinition","_getFirstResultFromLoaders","resolveConfig","errorCallback","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","possiblyGetConfigFromAmd","loadedConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveTemplate","isDocumentFragment","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveViewModel","fixedInstance","componentInfo","content","HTMLElement","DocumentFragment","makeErrorCallback","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadTemplate","loadViewModel","_allRegisteredComponents","getComponentParamsFromCustomElement","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","componentBindingValue","createDocumentFragment","newDocFrag","allComponents","cloneTemplateIntoElement","componentDefinition","clonedNodesArray","createViewModel","originalChildNodes","componentParams","componentViewModelFactory","templateNodes","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","loadingOperationId","componentViewModel","childBindingContext","ctx","attrHtmlToJavascriptMap","class","for","update","attrName","attrValue","toRemove","removeAttribute","after","updateModel","isChecked","checked","elemValue","useCheckedValue","checkedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","updateView","isCheckbox","classesWrittenByBindingKey","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","hasfocusUpdatingProperty","hasfocusLastValue","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","applyToObject","defaultValue","predicateType","optionForArrayItem","arrayEntry","oldOptions","previousSelectedValues","valueAllowUnset","itemUpdate","optionText","setSelectionCallback","newOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","arrayToDomNodeChildrenOptions","setDomNodeChildrenFromArrayMapping","selectionChanged","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","templateSource","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","validateDataBindValuesForRewriting","allValidators","possibleErrorMessage","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","getTemplateDomData","templatesDomDataKey","setTemplateDomData","templateScript","templateTextArea","templateTemplate","templateElement","templateType","elemContentsProperty","dataDomDataPrefix","templateData","containerData","textData","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","_templateEngine","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","disposeOldComputedAndStoreNewOne","newComputed","oldComputed","templateComputedDomDataKey","setTemplateEngine","renderTemplate","dataOrBindingContext","whenToDispose","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","bindingValue","templateComputed","dataArray","innerBindingContext","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","r","leftItem","rightItem","oldArray","newArray","dontLimitMoves","compareSmallArrayToBigArray","statusNotInOld","statusNotInNew","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","itemMovedOrRetained","editScriptIndex","oldPosition","mapData","lastMappingResult","newMappingResultIndex","itemsForMoveCallbacks","indexObservable","newMappingResult","itemsToProcess","callCallback","items","editScriptItem","movedIndex","isFirstExecution","lastArray","x","lastMappingResultIndex","nodesToDelete","itemsForBeforeRemoveCallbacks","itemsForAfterAddCallbacks","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","ensureHasReferencedJQueryTemplates","jQueryTmplVersion","compiledTemplate","jQueryTemplateOptions","precompiled","koBindingContext","resultNodes","templateMarkup","open","close","jqueryTmplTemplateEngineInstance"],"mappings":"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","file":"../knockout-3.4.2.debug.js","sourcesContent":["/*!\n * Knockout JavaScript library v3.4.2\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.2\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || self.isDifferent(previousValue, pendingValue);\n\n            notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingNotifySubscribersFunction,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (underlyingNotifySubscribersFunction) {\n                target['notifySubscribers'] = underlyingNotifySubscribersFunction;\n                underlyingNotifySubscribersFunction = undefined;\n            }\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n\n            changed = true;\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (this[computedState].isStale) {\n                this.evaluateImmediate();\n            } else {\n                this[computedState].isDirty = false;\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                self._subscribable = subscribable;\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable;\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                self._subscribable = subscribable;\n\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n\n                // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n                // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n                // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n                // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n                // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n                nodes = [];\n                subscribable._addNode = function(node) {\n                    nodes.push(node);\n                    ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                        ko.utils.arrayRemoveItem(nodes, node);\n                        if (!nodes.length) {\n                            subscribable.dispose();\n                            self._subscribable = subscribable = undefined;\n                        }\n                    });\n                };\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    ko.bindingContext.prototype.createStaticChildContext = function (dataItemOrAccessor, dataItemAlias) {\n        return this['createChildContext'](dataItemOrAccessor, dataItemAlias, null, { \"exportDependencies\": true });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var rawValue = valueAccessor(),\n                    dataValue = ko.utils.unwrapObservable(rawValue),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, rawValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext.createStaticChildContext(dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext.createStaticChildContext(options['data'], options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n"]}